接口是一种公共的规范标准
Java 中接口体现在------对行为的抽象

接口的特点
(1)接口用关键字interface修饰
    public interface 接口名{}
(2)类实现接口implements表示
   public class 类名 implements 接口名{}
(3)接口不能实例化
   接口如何实例化？ 参照多态方式，通过实现类对象实例化，这叫接口多态

   JumppingInterface j = new Kangaroo();
   j.jump();

   多态的形式：具体类多态（一般不用）
             抽象类多态
             接口多态
   多态的前提：有继承/实现关系；有方法重写；有父（类/接口）引用指向（子/实现）类对象


(4)接口的实现类
  要么重写接口中的所有抽象方法

  public class Kangaroo implements JumppingInterface{
      @Override
      public void jump() {
          System.out.println("袋鼠跳");
      }
  }

  要么是抽象类

  public abstract class Rabbit implements JumppingInterface {
  }