week2
1.1（Demo1）
继承：多个类有共同的成员变量和成员方法，抽取到另外一个类中（父类），在让多个类去继承这个父类，我们的多个类就可以获取到父类中的成员了。
 * extends
 在程序中，如果想声明一个类继承另一个类，需要使用extends关键字。
 格式：
 class 子类名 extends 父类名 {}

父类：基类，超类
子类：派生类

继承中子类的特点
子类可以有父类的内容
还可以有自己特有的内容


___________________________
1.2
A:优点
提高了代码的复用性（多个类相同的成员可以放到同一类中）
提高了代码的可维护性（如果方法的代码需要修改，修改一处即可）
B:缺点：
类的耦合性增强了，当父类发生变化时候子类也不得不跟着变化，削弱子类的独立性
when--什么时候使用继承
继承体现的关系：is
假设法：我有两个类A和B，
      如果满足A是B的一种，或者B是A的一种
      说明他们存在继承关系，这个时候可以考虑继承体现
      否则，不能滥用继承
      举例：apple and fruit；cat and animal;cat and dog(❌）
开发的原则：高内聚低耦合
内聚：就是自己完成某件事情的能力
耦合：类与类的关系

___________________________
1.3（Demo2）
继承中变量访问特点
在子类方法中访问一个变量（顺序如下）
子类局部范围找---子类成员范围找---父类成员范围找---如果都没有报错（不考虑Grandfather）

___________________________
1.4（Demo3）
this:代表本类对象的引用
super：代表父类对象引用

this.成员变量  ----- 访问本类成员变量
this(……）     ----- 访问本类的构造方法
this.成员方法(……）-----访问本类成员方法

super.成员变量  ----- 访问父类成员变量
super(……）     ----- 访问父类的构造方法
super.成员方法(……）-----访问父类成员方法

___________________________
1.5（Demo4）
子类中所有的构造方法默认都会访问父类无参数构造方法
为什么？
因为子类会继承父类中的数据，可能还会用到父类的数据。所以，子类初始化之前，一定要先完成父类数据初始化
每一个子类构造方法的第一条语句默认都是：super()

如果父类中没有无参数构造方法，只有带参数构造方法，怎么办？
1）通过使用super关键字去显示调用父类带参数构造方法
2）在父类中自己提供一个无参构造方法

复习回顾(面向对象）
--------------------------
构造方法
格式：
 public class 类名{
    修饰符 类名（参数）{

    }
 }

～～～～～～～～～～～～～～～～
创建对象
  格式： 类名 对象名 = new 类名();
  范例： Phone p = new Phone();

使用对象
1、使用成员变量
 格式：对象名.变量名
 范例：p.brand

2、使用成员方法
 格式：对象名.方法名()
 范例：p.call()


private关键字--不让外界的对象直接访问成员变量
private String name;
private int age;

公共
public String name
public int age;